{
  "metadata": {
    "name": "New JSNB",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "// Define HTML content\nconst htmlContent = `\n<style>\n    body {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        min-height: 100vh;\n        margin: 0;\n        font-family: 'Arial', sans-serif;\n        background: linear-gradient(135deg, #1a1a3c, #4a1a3c, #1a3c4a);\n    }\n\n    /* Start Screen Styles */\n    .start-screen {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        background: linear-gradient(135deg, #1a1a3c, #4a1a3c, #1a3c4a);\n        z-index: 1000;\n    }\n\n    .start-container {\n        text-align: center;\n        background: rgba(255, 255, 255, 0.97);\n        padding: 40px;\n        border-radius: 20px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n        border: 2px solid rgba(255, 255, 255, 0.2);\n    }\n\n    /* Result Popup Styles */\n    .result-popup {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        display: none;\n        justify-content: center;\n        align-items: center;\n        background: rgba(0, 0, 0, 0.8);\n        z-index: 1000;\n    }\n\n    .result-container {\n        text-align: center;\n        background: rgba(255, 255, 255, 0.97);\n        padding: 40px;\n        border-radius: 20px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\n        animation: popIn 0.5s ease-out;\n        border: 2px solid rgba(255, 255, 255, 0.2);\n    }\n\n    .game-container {\n        display: none;\n        text-align: center;\n        backdrop-filter: blur(10px);\n        background-color: rgba(255, 255, 255, 0.97);\n        padding: 30px;\n        border-radius: 20px;\n        border: 2px solid rgba(255, 255, 255, 0.2);\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        animation: float 6s ease-in-out infinite;\n        max-width: 500px;\n        width: 90%;\n    }\n\n    h1 {\n        font-size: 3rem;\n        background: linear-gradient(45deg, #FF3366, #FF9933);\n        -webkit-background-clip: text;\n        background-clip: text;\n        color: transparent;\n        text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);\n        margin-bottom: 20px;\n    }\n\n    .board {\n        display: grid;\n        grid-template-columns: repeat(3, 100px);\n        grid-template-rows: repeat(3, 100px);\n        gap: 10px;\n        width: fit-content;\n        margin: 20px auto;\n        padding: 20px;\n        background: rgba(255, 255, 255, 0.8);\n        border-radius: 20px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n    }\n\n    .cell {\n        width: 100px;\n        height: 100px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        font-size: 3rem;\n        font-weight: bold;\n        cursor: pointer;\n        border-radius: 15px;\n        background: white;\n        border: 3px solid rgba(0, 0, 0, 0.1);\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\n        transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }   \n\n    .cell:hover {\n        transform: scale(1.02);\n        box-shadow: 0 4px 20px rgba(255, 51, 102, 0.2);\n    }\n\n    .cell.X {\n        background: linear-gradient(135deg, #FF336622, #FF336611);\n        color: #FF3366;\n        text-shadow: 0 2px 4px rgba(255, 51, 102, 0.3);\n    }\n\n    .cell.O {\n        background: linear-gradient(135deg, #3399FF22, #3399FF11);\n        color: #3399FF;\n        text-shadow: 0 2px 4px rgba(51, 153, 255, 0.3);\n    }\n\n    button {\n        padding: 15px 30px;\n        font-size: 1.2rem;\n        color: white;\n        background: linear-gradient(45deg, #FF3366, #3399FF);\n        border: none;\n        border-radius: 8px;\n        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);\n        transform: translateY(0);\n        transition: all 0.3s ease;\n        cursor: pointer;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        font-weight: bold;\n    }\n\n    button:hover {\n        background: linear-gradient(45deg, #3399FF, #FF3366);\n        transform: translateY(-3px);\n        box-shadow: 0 6px 20px rgba(0, 0, 0, 0.3);\n    }\n\n    #startButton {\n        font-size: 1.5rem;\n        padding: 20px 40px;\n        margin-top: 20px;\n    }\n\n    #message {\n        font-size: 1.5rem;\n        background: linear-gradient(45deg, #FF3366, #3399FF);\n        -webkit-background-clip: text;\n        background-clip: text;\n        color: transparent;\n        padding: 10px;\n        font-weight: bold;\n    }\n\n    .result-text {\n        font-size: 2rem;\n        margin-bottom: 20px;\n        background: linear-gradient(45deg, #FF3366, #3399FF);\n        -webkit-background-clip: text;\n        background-clip: text;\n        color: transparent;\n        font-weight: bold;\n    }\n\t    @keyframes float {\n        0%, 100% { transform: translateY(0); }\n        50% { transform: translateY(-10px); }\n    }\n\n    @keyframes win {\n        0% { transform: scale(1); }\n        50% { transform: scale(1.1) rotate(5deg); }\n        100% { transform: scale(1); }\n    }\n\n    .winner {\n        animation: win 0.5s ease-in-out;\n        box-shadow: 0 0 25px rgba(255, 51, 102, 0.4);\n    }\n\n    .confetti {\n        position: fixed;\n        width: 10px;\n        height: 10px;\n        background-color: #f0f;\n        position: absolute;\n        animation: confetti 5s ease-in-out infinite;\n    }\n\n    @keyframes confetti {\n        0% { transform: translateY(0) rotate(0deg); }\n        100% { transform: translateY(100vh) rotate(720deg); }\n    }\n\n    @keyframes popIn {\n        0% { transform: scale(0.3); opacity: 0; }\n        100% { transform: scale(1); opacity: 1; }\n    }\n\n    @media (max-width: 500px) {\n        .board {\n            grid-template-columns: repeat(3, 80px);\n            grid-template-rows: repeat(3, 80px);\n            gap: 8px;\n            padding: 15px;\n        }\n\n        .cell {\n            width: 80px;\n            height: 80px;\n            font-size: 2rem;\n        }\n\n        h1 {\n            font-size: 2rem;\n        }\n\n        button {\n            padding: 12px 24px;\n            font-size: 1rem;\n        }\n    }\n</style>\n\n<div class=\"start-screen\" id=\"startScreen\">\n    <div class=\"start-container\">\n        <h1>Tic Tac Toe</h1>\n        <button id=\"startButton\">Start Game</button>\n    </div>\n</div>\n\n<div class=\"result-popup\" id=\"resultPopup\">\n    <div class=\"result-container\">\n        <h2 class=\"result-text\" id=\"resultText\"></h2>\n        <button id=\"restartFromPopup\">Play Again</button>\n    </div>\n</div>\n\n<div class=\"game-container\" id=\"gameContainer\">\n    <h1>Tic Tac Toe</h1>\n    <div id=\"gameBoard\" class=\"board\">\n        <div class=\"cell\" data-index=\"0\"></div>\n        <div class=\"cell\" data-index=\"1\"></div>\n        <div class=\"cell\" data-index=\"2\"></div>\n        <div class=\"cell\" data-index=\"3\"></div>\n        <div class=\"cell\" data-index=\"4\"></div>\n        <div class=\"cell\" data-index=\"5\"></div>\n        <div class=\"cell\" data-index=\"6\"></div>\n        <div class=\"cell\" data-index=\"7\"></div>\n        <div class=\"cell\" data-index=\"8\"></div>\n    </div>\n    <p id=\"message\"></p>\n</div>\n`;\n\n// Inject HTML into the notebook\ndocument.body.innerHTML = htmlContent;\n\n// Game logic\nconst board = Array(9).fill(null);\nlet currentPlayer = \"X\";\nlet gameActive = true;\nconst messageElement = document.getElementById(\"message\");\nconst winningCombos = [\n    [0, 1, 2], [3, 4, 5], [6, 7, 8],\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    [0, 4, 8], [2, 4, 6]\n];\n\nfunction createConfetti() {\n    const colors = ['#FF3366', '#3399FF', '#FF9933', '#33FF99', '#9933FF'];\n    for (let i = 0; i < 50; i++) {\n        const confetti = document.createElement('div');\n        confetti.classList.add('confetti');\n        confetti.style.left = Math.random() * 100 + 'vw';\n        confetti.style.animationDuration = (Math.random() * 3 + 2) + 's';\n        confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];\n        document.body.appendChild(confetti);\n        setTimeout(() => confetti.remove(), 5000);\n    }\n}\n\nfunction showResultPopup(message) {\n    const popup = document.getElementById('resultPopup');\n    const resultText = document.getElementById('resultText');\n    resultText.textContent = message;\n    popup.style.display = 'flex';\n    createConfetti();\n}\n\nfunction startGame() {\n    document.getElementById('startScreen').style.display = 'none';\n    document.getElementById('gameContainer').style.display = 'block';\n    restartGame();\n}\n\nfunction handleCellClick(event) {\n    const cellIndex = event.target.getAttribute(\"data-index\");\n\n    if (board[cellIndex] || !gameActive) return;\n\n    board[cellIndex] = currentPlayer;\n    event.target.textContent = currentPlayer;\n    event.target.classList.add(currentPlayer);\n\n    if (checkWin()) {\n        setTimeout(() => {\n            showResultPopup(`Player ${currentPlayer} Wins!`);\n        }, 500);\n        gameActive = false;\n        return;\n    } else if (board.every(cell => cell)) {\n        setTimeout(() => {\n            showResultPopup(\"It's a Draw!\");\n        }, 500);\n        gameActive = false;\n        return;\n    }\n\n    currentPlayer = currentPlayer === \"X\" ? \"O\" : \"X\";\n    messageElement.textContent = `Player ${currentPlayer}'s turn`;\n}\n\nfunction checkWin() {\n    const hasWon = winningCombos.some(combo => {\n        const isWinning = combo.every(index => board[index] === currentPlayer);\n        if (isWinning) {\n            combo.forEach(index => {\n                document.querySelector(`[data-index=\"${index}\"]`).classList.add('winner');\n            });\n        }\n        return isWinning;\n    });\n    return hasWon;\n}\n\nfunction restartGame() {\n    board.fill(null);\n    gameActive = true;\n    currentPlayer = \"X\";\n    messageElement.textContent = `Player ${currentPlayer}'s turn`;\n    document.getElementById('resultPopup').style.display = 'none';\n\n    document.querySelectorAll(\".cell\").forEach(cell => {\n        cell.textContent = \"\";\n        cell.classList.remove(\"X\", \"O\", \"winner\");\n    });\n}\n\n// Event listeners\ndocument.querySelectorAll(\".cell\").forEach(cell => {\n    cell.addEventListener(\"click\", handleCellClick);\n});\n\ndocument.getElementById('startButton').addEventListener('click', startGame);\ndocument.getElementById('restartFromPopup').addEventListener('click', restartGame);\n\n// Initialize message\nmessageElement.textContent = `Player ${currentPlayer}'s turn`;",
      "status": "",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/jsnb",
  "run_on_load": false
}